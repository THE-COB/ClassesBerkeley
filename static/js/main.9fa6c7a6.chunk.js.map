{"version":3,"sources":["ClassItem/ClassItem.js","ClassItem/ClassObject.js","ApplicationDrawer/ApplicationDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["ClassItem","props","item","Card","Header","classDisplayName","Body","Title","classTitle","Subtitle","instructor","ListGroup","horizontal","Item","meetsDays","meetTimes","instructionMode","data","meetings","building","description","location","Accordion","flush","eventKey","enrollmentStatus","status","maxEnroll","enrolledCount","id","waitlistedCount","maxWaitlist","openReserved","reservedCount","seatReservations","map","reserve","index","numOpen","className","repeat","length","requirementGroup","replace","window","innerWidth","href","url","target","rel","ClassObject","dataJson","this","class","course","title","replaceAll","displayName","assignedInstructors","names","formattedName","i","e","split","join","startTime","endTime","subject","subjectArea","ApplicationDrawer","useState","open","setOpen","Toggle","onClick","Collapse","in","Overflow","ToC","Form","Group","breadth","Check","type","label","onChange","checked","setters","genReqs","getters","concat","filter","breadthFilter","breadths","openSeats","App","classes","setClasses","isLoading","setLoading","searchRef","useRef","pageNum","setPageNum","triedSearching","setTriedSearching","breadthFilters","setBreathFilters","genReqFilters","setGenReqFilters","openSeatsFilter","setOpenSeatsFilter","useEffect","baseUrl","current","value","payloadNum","paramObj","forEach","axios","get","params","then","response","searchResult","allResults","DOMParser","parseFromString","getElementsByClassName","allClasses","element","push","JSON","parse","children","getAttribute","handlePageChange","pageChange","newPage","Container","fluid","Row","Col","xs","sm","md","lg","InputGroup","size","Text","FormControl","ref","Button","variant","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa6c7a6.chunk.js","sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ClassItem.css';\r\n\r\nfunction ClassItem(props) {\r\n    if(typeof props.item === 'undefined'){\r\n        return (<p></p>);\r\n    }\r\n    return (\r\n        <>\r\n        <Card>\r\n            <Card.Header>{props.item.classDisplayName}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>{props.item.classTitle}</Card.Title>\r\n                <Card.Subtitle>{props.item.instructor}</Card.Subtitle>\r\n                <br></br>\r\n                    <ListGroup horizontal>\r\n                        <ListGroup.Item>Days: {props.item.meetsDays}</ListGroup.Item>\r\n                        <ListGroup.Item>Time: {props.item.meetTimes}</ListGroup.Item>\r\n                    </ListGroup>\r\n                    <br></br>\r\n                    <strong>Instruction Mode: </strong>{props.item.instructionMode}\r\n                    <br></br>\r\n                    <strong>Location: </strong>{typeof props.item.data.meetings !== 'undefined' && typeof props.item.data.meetings[0].building.description !== 'undefined' ? props.item.data.meetings[0].location.description : \"No location information\"}\r\n                    <br></br>\r\n                    <Accordion flush>\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header><strong>Open Seats:{'\\u00A0'}</strong>{props.item.enrollmentStatus.status.description === 'Open' ? props.item.enrollmentStatus.maxEnroll-props.item.enrollmentStatus.enrolledCount : 'Closed'}</Accordion.Header>\r\n                        <Accordion.Body id=\"openSeatsBody\">\r\n                            <ul>\r\n                                <li>Enrolled Count: {props.item.enrollmentStatus.enrolledCount+' / '+props.item.enrollmentStatus.maxEnroll}</li>\r\n                                <li>Waitlisted: {props.item.enrollmentStatus.waitlistedCount+' / '+props.item.enrollmentStatus.maxWaitlist}</li>\r\n                                <li>Reserved Seats Open: {props.item.enrollmentStatus.openReserved+' / '+props.item.enrollmentStatus.reservedCount}</li>\r\n                                <li>\r\n                                <ul>\r\n                                    {typeof props.item.enrollmentStatus.seatReservations !== 'undefined' && \r\n                                    props.item.enrollmentStatus.seatReservations.map((reserve, index) => {\r\n                                        let numOpen = reserve.maxEnroll-reserve.enrolledCount+'/'+reserve.maxEnroll;\r\n                                        return <li className=\"sublist\" key={index}><tt>{'\\u00A0'.repeat(8-numOpen.length)+numOpen}</tt>{': '+reserve.requirementGroup.description.replace('College of Letters & Sciences', 'L&S')}</li>\r\n                                    })}\r\n                                </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                    </Accordion>\r\n                    <div id=\"showMore\">\r\n                        <p id=\"classDescription\">{props.item.description}</p>\r\n                        {window.innerWidth <= 600 && <button id=\"showMoreP\">Show More</button>}\r\n                    </div>\r\n\r\n                    <a id=\"viewDetails\" href={props.item.url} target=\"_blank\" rel=\"noreferrer\">View Details</a>\r\n            </Card.Body>\r\n        </Card>\r\n        <br></br>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClassItem","class ClassObject {\r\n    constructor(dataJson) {\r\n        this.data = dataJson;\r\n        this.classTitle = this.data.class.course.title;\r\n        this.classTitle = this.classTitle.replaceAll('Vergil', 'Virgil');\r\n        this.classDisplayName = this.data.displayName;\r\n        this.id = this.data.id;\r\n        try{\r\n            this.instructor = this.data.meetings[0].assignedInstructors[0].instructor.names[0].formattedName;\r\n            for(let i = 1; i<this.data.meetings[0].assignedInstructors.length; i++){\r\n                this.instructor += \", \" + this.data.meetings[0].assignedInstructors[i].instructor.names[0].formattedName;\r\n            }\r\n        } catch (e) {\r\n            this.instructor = \"\";\r\n        }\r\n        try{\r\n            this.meetsDays = this.data.meetings[0].meetsDays.split(/(?=[A-Z])/).join(\" \");\r\n        } catch (e) {\r\n            this.meetsDays = \"\";\r\n        }\r\n        try{\r\n            this.meetTimes = this.data.meetings[0].startTime + ' - ' + this.data.meetings[0].endTime;\r\n        } catch (e) {\r\n            this.meetTimes = \"\";\r\n        }\r\n        this.instructionMode = this.data.instructionMode.description;\r\n        this.enrollmentStatus = this.data.enrollmentStatus;\r\n        try {\r\n            this.description = this.data.course.description;\r\n        } catch (e) {\r\n            this.description = \"\";\r\n        }\r\n        this.subject = this.data.class.course.subjectArea.description;\r\n        this.url = `https://classes.berkeley.edu/content/${this.data.displayName.replaceAll(' ', '-')}`   \r\n    }\r\n}\r\n\r\nexport default ClassObject;\r\n","import React, { useState} from 'react';\r\nimport {Form, Collapse, Accordion} from 'react-bootstrap';\r\nimport { Drawer, } from 'react-bootstrap-drawer';\r\nimport './ApplicationDrawer.css';\r\n\r\nfunction ApplicationDrawer(props){\r\n  \r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const allBreaths = [\r\n      'Arts & Literature',\r\n      'Physical Science',\r\n      'Social & Behavioral Sciences',\r\n      'Historical Studies',\r\n      'Biological Science',\r\n      'Philosophy & Values',\r\n      'International Studies'\r\n    ];\r\n\r\n    const allGenReqs = [\r\n        '1st Half of Reading & Composition',\r\n        '2nd Half of Reading & Composition',\r\n        'American Cultures',\r\n        'American History',\r\n        'American Institutions',\r\n        'Entry Level Writing Requirement'\r\n    ];\r\n  \r\n    const handleToggle = () => setOpen(!open);\r\n    \r\n    return (\r\n        <Drawer>\r\n            <Drawer.Toggle onClick={ handleToggle } />\r\n  \r\n            <Collapse in={ open }>\r\n                <Drawer.Overflow>\r\n                    <Drawer.ToC>\r\n                        <Form>\r\n                        <Accordion flush>\r\n                          <Accordion.Header className=\"filterHeader\"><Drawer.Header>General Requirements</Drawer.Header></Accordion.Header>\r\n                          <Accordion.Body>\r\n                          <Form.Group className=\"mb-3\">\r\n                            {allGenReqs.map(breadth => (\r\n                              <Form.Check key={breadth} type=\"checkbox\" label={breadth} onChange={(e) => {\r\n                                if (e.target.checked) {\r\n                                  props.setters.genReqs(props.getters.genReqs.concat(breadth));\r\n                                } else {\r\n                                  props.setters.genReqs(props.getters.genReqs.filter(breadthFilter => breadthFilter !== breadth));\r\n                                }\r\n                              }}/>\r\n                            ))}\r\n                          </Form.Group>\r\n                          </Accordion.Body>\r\n                          </Accordion>\r\n                        </Form>\r\n                        <Form>\r\n                          <Accordion flush>\r\n                          <Accordion.Header className=\"filterHeader\"><Drawer.Header>Breadth Requirements</Drawer.Header></Accordion.Header>\r\n                          <Accordion.Body>\r\n                          <Form.Group className=\"mb-3\">\r\n                            {allBreaths.map(breadth => (\r\n                              <Form.Check key={breadth} type=\"checkbox\" label={breadth} onChange={(e) => {\r\n                                if (e.target.checked) {\r\n                                  props.setters.breadths(props.getters.breadths.concat(breadth));\r\n                                } else {\r\n                                  props.setters.breadths(props.getters.breadths.filter(breadthFilter => breadthFilter !== breadth));\r\n                                }\r\n                              }}/>\r\n                            ))}\r\n                          </Form.Group>\r\n                          </Accordion.Body>\r\n                          </Accordion>\r\n                        </Form>\r\n\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Check type=\"checkbox\" label=\"Open Seats\" onChange={(e) => {\r\n                                    if (e.target.checked) {\r\n                                        props.setters.openSeats(true);\r\n                                    } else {\r\n                                        props.setters.openSeats(false);\r\n                                    }\r\n                                }}/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        \r\n                    </Drawer.ToC>\r\n                </Drawer.Overflow>\r\n            </Collapse>\r\n        </Drawer>\r\n    );\r\n  }\r\n\r\n  export default ApplicationDrawer;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport 'react-bootstrap-drawer/lib/style.css';\r\nimport './App.css';\r\nimport ClassItem from './ClassItem/ClassItem';\r\nimport ClassObject from './ClassItem/ClassObject';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect, useRef} from 'react';\r\nimport ApplicationDrawer from './ApplicationDrawer/ApplicationDrawer';\r\n\r\nfunction createClass(searchResult){\r\n  return new ClassObject(JSON.parse(searchResult.children[0].getAttribute('data-json')));\r\n}\r\n\r\nfunction App() {\r\n  const [classes, setClasses] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const searchRef = useRef(null);\r\n  const [pageNum, setPageNum] = useState(0);\r\n  const [triedSearching, setTriedSearching] = useState('Try searching something!');\r\n  \r\n  const [breadthFilters, setBreathFilters] = useState([]);\r\n  const [genReqFilters, setGenReqFilters] = useState([]);\r\n  const [openSeatsFilter, setOpenSeatsFilter] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if(isLoading) {\r\n      setTriedSearching('Searching...');\r\n      let baseUrl = '/search/class/' + searchRef.current.value;\r\n      let payloadNum = 1;\r\n      let paramObj = {\r\n        'page': pageNum,\r\n        \"f[0]\": \"im_field_term_name:2208\"\r\n      };\r\n      breadthFilters.forEach((filter, index) => {\r\n        paramObj[\"f[\" + payloadNum + \"]\"] = \"sm_breadth_reqirement:\"+filter;\r\n        payloadNum++;\r\n      });\r\n      genReqFilters.forEach((filter, index) => {\r\n        paramObj[\"f[\" + payloadNum + \"]\"] = \"sm_general_requirement:\"+filter;\r\n        payloadNum++;\r\n      });\r\n      if(openSeatsFilter) {\r\n        paramObj[\"f[\" + payloadNum + \"]\"] = \"ts_open_seats:open\";\r\n        payloadNum++;\r\n      }\r\n      axios.get(baseUrl, {\r\n        params: paramObj\r\n      }).then(function (response) {\r\n        let parser = new DOMParser();\r\n        let htmlDoc = parser.parseFromString(response.data, \"text/html\");\r\n        let allResults = htmlDoc.getElementsByClassName('search-result');\r\n        let allClasses = []\r\n        for(let element of allResults){\r\n          allClasses.push(createClass(element));\r\n        }\r\n        setClasses(allClasses);\r\n        if(allClasses.length === 0){\r\n          setTriedSearching('Go outside lmao');\r\n        }\r\n      });\r\n    }\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [classes]);\r\n\r\n  const handlePageChange = (pageChange) => {\r\n    let newPage = pageNum+pageChange;\r\n    if(newPage >= 0){\r\n      setPageNum(newPage);\r\n      setLoading(true);\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n     setLoading(true);\r\n     setPageNum(0);\r\n  }\r\n  return (\r\n    <Container fluid=\"md\" >\r\n      <>\r\n      <br></br>\r\n      <Row>\r\n        \r\n        <Col xs={9} sm={9} md={6} lg={6}>\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <>\r\n            <InputGroup.Text id=\"searchInput\" >Search...</InputGroup.Text>\r\n            <FormControl aria-label=\"Small\" ref={searchRef} aria-describedby=\"searchInput\" />\r\n            <Button variant=\"outline-secondary\" id=\"button-addon1\" disabled={isLoading} onClick={!isLoading ? handleClick : null}>\r\n              {!isLoading ? 'Submit' : 'Loading...'}\r\n            </Button>\r\n            </>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      <Row>\r\n        <Col xs={ 12 } md={ 3 } lg={ 2 }>\r\n          <ApplicationDrawer getters={{\r\n            breadths: breadthFilters,\r\n            genReqs: genReqFilters,\r\n            openSeats: openSeatsFilter\r\n          }} \r\n          setters={{\r\n            breadths: setBreathFilters,\r\n            genReqs: setGenReqFilters,\r\n            openSeats: setOpenSeatsFilter\r\n          }} />\r\n        </Col>\r\n        \r\n        <Col lg={10} xs={11}>\r\n          {classes.length > 0 ? classes.map(item => <ClassItem key={item.id} item={item} />) : <p>{triedSearching}</p>}\r\n          {(classes.length > 0 || triedSearching === 'Go outside lmao') && <Button className=\"pageChange\" onClick={() => handlePageChange(-1)} variant=\"light\"><i className=\"bi bi-arrow-left arrowIcon\"></i></Button>}\r\n          {classes.length > 0 && <p id=\"pageNum\">{pageNum}</p>}\r\n          {classes.length > 0 && <Button className=\"pageChange\" onClick={() => handlePageChange(1)} variant=\"light\"><i className=\"bi bi-arrow-right arrowIcon\"></i></Button>}\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      \r\n      </>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}